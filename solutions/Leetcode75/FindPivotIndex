class Solution:
    def pivotIndex(self, nums: List[int]) -> int:

        sumLeft = [0] * len(nums)
        sumRight = [0] * len(nums)
        for i in range(len(nums)):
            if i != 0:
                #print("left sum= ",sum(nums[:i]))
                sumLeft[i] = sum(nums[:i])
            if i+1 != len(nums):
                #print("right sum= ", sum(nums[i+1:]))
                sumRight[i]= sum(nums[i+1:])
            if sumLeft[i] == sumRight[i]:
                return i
        return -1
        '''
        too slow 1st attempt
        j_counter = 0
        k_counter = 0
        for i in range(len(nums)):
            if i != 0:
                for j in range(i):
                    j_counter = j_counter + nums[j]
            if i+1 != len(nums):
                for k in range(i+1, len(nums)):
                    k_counter = k_counter + nums[k]
            if k_counter == j_counter:
                return i
            else:
                j_counter = 0
                k_counter = 0
        return -1
        '''
        '''
        optimal solution
        if not nums:
            return 0
        l = 0
        total = sum(nums)
        #1,7,3,6,5,6
        for i,num in enumerate(nums):
            r = total-l - num
            if r-l==0 and (i!=0 or i!=-1):
                return i
            elif r-l==0 and (i==0 or i==-1):
                return 0
            l += num
        return-1
        '''
